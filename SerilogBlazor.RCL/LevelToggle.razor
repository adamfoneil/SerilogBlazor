@using Microsoft.AspNetCore.Components.Forms
@using Serilog.Events
@inject LogLevels LogLevels

<div class="namespace-grid">
	<!-- Default level as first entry -->
	<div style="padding-right:1rem">Default</div>
	<div>
		<InputSelect TValue="LogEventLevel" @bind-Value="LogLevels.DefaultLevelSwitch.MinimumLevel" @bind-Value:after="OnLogLevelChanged">
			@foreach (var option in Enum.GetValues<LogEventLevel>())
			{
				<option value="@option">@option</option>
			}
		</InputSelect>
	</div>
	
	<!-- Namespace-specific levels -->
	@foreach (var kp in LogLevels.LoggingLevels)
	{
		<div style="padding-right:1rem">@kp.Key</div>
		<div>
			<InputSelect TValue="LogEventLevel" @bind-Value="kp.Value.MinimumLevel" @bind-Value:after="OnLogLevelChanged">
				@foreach (var option in Enum.GetValues<LogEventLevel>())
				{
					<option value="@option">@option</option>
				}
			</InputSelect>
		</div>
	}
</div>

@code {
	[Parameter] public EventCallback OnLogLevelsChanged { get; set; }

	private async Task OnLogLevelChanged()
	{
		await OnLogLevelsChanged.InvokeAsync();
	}
}
